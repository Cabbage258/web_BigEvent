资源地址
    线上DEMO项目地址
        http://www.escook.cn:8086/
    项目的API接口地址
        https://www.showdoc.cc/escook?page_id=3707158761215217
    新建本地库,连接github origin库,追踪本地
layui框架

自定义代码模版
    webstorm:
        ctrl+shift+A => live templates
    vsc
        文件 => 首选项 => 用户片段

基于token的认证
    基于touken的认证机智将认证信息返回给客户端并存储,下次访问其他页面,需要从客户端传递认证信息回服务端.简易流程:
        · 客户端使用用户名跟密码请求登录
        · 服务端收到请求,去验证用户名与密码
        · 验证成功后,服务端会签发一个token,再把这个token发送给客户端
        · 客户端收到token以后可以把它存储起来,比如放在cookie或localStorage里
        · 客户端每次向服务端请求资源的时候需要带着服务端签发的token
        · 服务端收到请求,然后去验证客户端请求里带着的token,如果炎症成功,就向客户端返回请求的数据
    基于token的验证机制,有以下的优点:
        · 支持跨域访问,将token置于请求头重,而cookie是不支持跨域访问的.
        · 无状态化,服务端无需存储token,只需要验证token信息是否正确即可,而session需要在服务端存储,一般是通过
            cookie中的sessionID在服务端查找对应的session
        · 无需绑定到一个特殊的身份验证方案(传统的用户名密码登录),只需要生成的token是符合我们预期设定的即可
        · 更适用于移动端(Android,iOS,小程序等等),像这种原生平台不支持cookie,比如说微信小程序,
            每一次请求都是一次会话.当然我们可以每次去手动为他添加cookie.
        · 避免CSRF跨站伪造攻击,还是因为不依赖cookie
    缺点:
        · 登录机制实现略微复杂.
        · 由于副武器不保存toen,因此无法在使用过程中废止某个token,或者更改token的权限.